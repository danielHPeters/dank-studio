{"version":3,"sources":["webpack:/webpack/bootstrap f30f6694125ab29f5317","webpack:///src/oscillator/app.js","webpack:///src/oscillator/input/Keyboard.js","webpack:///src/oscillator/audio/Sound.js","webpack:///src/oscillator/widgets/KeyPad.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","document","addEventListener","keyPad","_KeyPad2","default","keyBoard","registerKey","init","_Sound2","_interopRequireDefault","Keyboard","this","context","AudioContext","window","console","keyActionMap","registeredInputs","createCompressor","registerKeyHandler","_createClass","compressor","knee","value","threshold","ratio","attack","destination","type","key","frequency","event","setDownEvent","_this","setUpEvent","add","getElementById","classList","remove","stopAndDisconnect","Sound","oscillator","gainNode","connect","currentTime","gain","setValueAtTime","KeyPad","id","newKey","createElement","span","text","textNode","createTextNode","textNode2","lineBreak","appendChild","setAttribute","element","keys","forEach"],"mappings":"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","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f30f6694125ab29f5317","import KeyBoard from './input/Keyboard'\nimport KeyPad from './widgets/KeyPad'\n\nfunction toggleSoundTypes () {\n  \n}\n\nfunction init () {\n  const keyBoard = new KeyBoard()\n  const keyPad = new KeyPad('keyPad', keyBoard)\n  keyBoard.registerKey('a', 261.63)\n  keyBoard.registerKey('s', 293.66)\n  keyBoard.registerKey('d', 329.63)\n  keyBoard.registerKey('f', 349.23)\n  keyBoard.registerKey('g', 392.00)\n  keyBoard.registerKey('h', 440)\n  keyBoard.registerKey('j', 493.88)\n  keyBoard.registerKey('k', 523.25)\n  keyPad.addAllKeys()\n}\n\ndocument.addEventListener('DOMContentLoaded', init())\n\n\n\n// WEBPACK FOOTER //\n// ./src/oscillator/app.js","import Sound from './../audio/Sound'\n\nexport default class Keyboard {\n  constructor () {\n    try {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext\n      this.context = new AudioContext()\n    } catch (error) {\n      console.log('This browser does not support Web Audio API.')\n    }\n    // this.gainNode = this.context.createGain()\n    this.keyActionMap = {}\n    this.registeredInputs = {}\n\n    // this.gainNode.gain.value = 1\n    // this.gainNode.connect(this.context.destination)\n    this.createCompressor()\n    this.registerKeyHandler()\n  }\n\n  createCompressor () {\n    this.compressor = this.context.createDynamicsCompressor()\n    this.compressor.threshold.value = -50\n    this.compressor.knee.value = 40\n    this.compressor.ratio.value = 12\n    this.compressor.attack.value = 0\n    this.compressor.release.value = 0.25\n    this.compressor.connect(this.context.destination)\n  }\n\n  /**\n   * Register a keyboard key with a sound\n   * @param {string} key\n   * @param {number} frequency\n   * @param {string} type\n   */\n  registerKey (key, frequency, type = 'sawtooth') {\n    this.keyActionMap[key] = new Sound(this.context, this.compressor, frequency, type)\n  }\n\n  registerKeyHandler () {\n    window.addEventListener('keydown', event => this.setDownEvent(event.key))\n    window.addEventListener('keyup', event => this.setUpEvent(event.key))\n  }\n\n  setDownEvent (key) {\n    if (!this.registeredInputs[key] && this.keyActionMap[key] !== undefined) {\n      document.getElementById(key).classList.add('keyActive')\n      this.keyActionMap[key].connectAndStart()\n      this.registeredInputs[key] = true\n    }\n  }\n\n  setUpEvent (key) {\n    if (this.registeredInputs[key] && this.keyActionMap[key] !== undefined) {\n      document.getElementById(key).classList.remove('keyActive')\n      this.keyActionMap[key].stopAndDisconnect()\n      this.registeredInputs[key] = false\n    }\n  }\n\n  /**\n   * Sets type of sounds\n   * @param {string} type sound type (eg. sine, square)\n   */\n  setSoundsType (type) {\n    Object.keys(this.keyActionMap).forEach(sound => { sound.type = type })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/oscillator/input/Keyboard.js","export default class Sound {\n  constructor (context, compressor, frequency, type) {\n    this.context = context\n    this.compressor = compressor\n    this.frequency = frequency\n    this.type = type\n  }\n\n  connectAndStart () {\n    this.oscillator = this.context.createOscillator()\n    this.gainNode = this.context.createGain()\n    this.gainNode.connect(this.compressor)\n    this.oscillator.type = this.type\n    this.oscillator.frequency.value = this.frequency\n    this.oscillator.connect(this.gainNode)\n    this.gainNode.gain.setValueAtTime(0, this.context.currentTime)\n    this.gainNode.gain.linearRampToValueAtTime(0.4, this.context.currentTime + 0.1)\n    this.oscillator.start(0.5)\n  }\n\n  stopAndDisconnect () {\n    this.gainNode.gain.linearRampToValueAtTime(0, this.context.currentTime + 0.8)\n    this.oscillator.stop(this.context.currentTime + 2.8)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/oscillator/audio/Sound.js","export default class KeyPad {\n  constructor (id, keyBoard) {\n    this.id = id\n    this.element = document.getElementById(this.id)\n    this.keyBoard = keyBoard\n  }\n\n  addKey (id, text) {\n    let newKey = document.createElement('li')\n    let span = document.createElement('span')\n    let textNode = document.createTextNode(id)\n    let textNode2 = document.createTextNode(text)\n    let lineBreak = document.createElement('br')\n    span.appendChild(textNode)\n    span.appendChild(lineBreak)\n    span.appendChild(textNode2)\n    span.classList.add('keyDescription')\n    newKey.appendChild(span)\n    newKey.classList.add('key')\n    newKey.setAttribute('id', id)\n    newKey.addEventListener('mouseenter', event => this.keyBoard.setDownEvent(id))\n    newKey.addEventListener('touchstart', event => this.keyBoard.setDownEvent(id))\n    newKey.addEventListener('mouseleave', event => this.keyBoard.setUpEvent(id))\n    newKey.addEventListener('touchend', event => this.keyBoard.setUpEvent(id))\n    this.element.appendChild(newKey)\n  }\n\n  addAllKeys () {\n    Object.keys(this.keyBoard.keyActionMap).forEach(key => {\n      this.addKey(key, this.keyBoard.keyActionMap[key].frequency)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/oscillator/widgets/KeyPad.js"]}